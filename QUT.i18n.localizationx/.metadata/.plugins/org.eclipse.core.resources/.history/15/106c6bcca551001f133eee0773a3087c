package com.example.server.data.repository.patterns;


import com.google.appengine.api.datastore.Key;
import com.google.appengine.api.users.User;
import java.util.Date;
import java.util.List;

import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.PersistenceCapable;
import javax.jdo.annotations.Persistent;
import javax.jdo.annotations.PrimaryKey;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * A Google datastore entity.
 * This data entity encapsulates details of a Pattern object.
 * 
 * @author <a href="mailto:yu.toh@connect.qut.edu.au">Samuel Toh</a>
 * @version $Revision: 1 $
 */

@PersistenceCapable(detachable="true")
@XmlRootElement
public class PatternEntity {

	@PrimaryKey
    @Persistent(valueStrategy = IdGeneratorStrategy.IDENTITY)
    private Key key;

    @Persistent	
    private String name;

    @Persistent
    private String standard;
    
    /**
     * The language the rule belongs to.
     */
    @Persistent
    private String localeCode;
    
    /**
     * State whether it is an exception or break rule.
     */
    @Persistent
    private String ruleType;
    
    /**
     * A regular expression which represents the text that appears before a segment break.
     */
    @Persistent
    private String beforeRegExpression;

    /**
     * A regular expression which represents the text that appears after a segment break.
     */
    @Persistent
    private String afterRegExpression;
    
    @Persistent
    private Date lastUpdate;
    
    @Persistent(mappedBy = "patternRef")
    private List<AnnotationEntity> annotations;

    /**
     * Sets the primary key of this data entity
     * @param key
     */
	public void setKey(Key key) {
		this.key = key;
	}

	/**
	 * Gets the primary key for this entity
	 * @return a unique key object
	 */
	public Key getKey() {
		return key;
	}

	/**
	 * Sets the name of the pattern
	 * @param name string representational of the name of pattern
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Returns the pattern name
	 * @return a string containning the pattern name
	 */
	@XmlAttribute
	public String getName() {
		return name;
	}

	/**
	 * Determines which standard this pattern belongs to. e.g. TMX SRX
	 * @param standard the standard
	 */
	public void setStandard(String standard) {
		this.standard = standard;
	}

	/**
	 * Returns the standard
	 * @return
	 */
	@XmlAttribute
	public String getStandard() {
		return standard;
	}
	
	/**
	 * Sets the last updated time for this pattern
	 * @param lastUpdate the date object
	 */
	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	/**
	 * Returns the last updated time object
	 * @return 
	 */
	@XmlAttribute
	public Date getLastUpdate() {
		return lastUpdate;
	}

	/**
	 * Set the list of annotations for this pattern
	 * @param annotations a list of AnnotationEntities
	 */
	public void setAnnotations(List<AnnotationEntity> annotations) {
		this.annotations = annotations;
	}

	/**
	 * Returns you a list of annotations
	 * @return a java.ulti.List containing the AnnotationEntity
	 */
	@XmlElements(value = { @XmlElement })
	public List<AnnotationEntity> getAnnotations() {
		return annotations;
	}

	/**
	 * Sets the language code for this pattern e.g. "en" "de" etc
	 * @param localeCode The locale code for this pattern.
	 */
	public void setLocaleCode(String localeCode) {
		this.localeCode = localeCode;
	}

	/**
	 * Returns the locale code for this pattern
	 * @return 
	 */
	@XmlAttribute	
	public String getLocaleCode() {
		return localeCode;
	}

	public void setRuleType(String ruleType) {
		this.ruleType = ruleType;
	}

	@XmlAttribute
	public String getRuleType() {
		return ruleType;
	}

	public void setBeforeRegExpression(String beforeRegExpression) {
		this.beforeRegExpression = beforeRegExpression;
	}

	@XmlAttribute
	public String getBeforeRegExpression() {
		return beforeRegExpression;
	}

	public void setAfterRegExpression(String afterRegExpression) {
		this.afterRegExpression = afterRegExpression;
	}

	@XmlElement	
	public String getAfterRegExpression() {
		return afterRegExpression;
	}

}
